<?xml version="1.0"?>
<project name="GUI example with C++ Fltk and Java Swing" default="targets">
   <taskdef resource="cpptasks.tasks"/>
<<<<<<< HEAD
 <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
=======
   <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
>>>>>>> 8fa2ddab5d46a08d820f8a7388a1d94d23c026be
   <property name="src.dir" value="src"/>
   <property name="dist.dir" value="bin"/>
   <property name="classes.dir" value="classes"/>
   <property name="obj.dir" value="obj"/>
   <property environment="env"/>
   <property name="ostype" value="${env.OSTYPE}"/>

   <target name="targets">
      <echo message="Targets are clean, prepare, build.cpp, build.java, targets"/>
      <echo message="base directory is: ${basedir}"/>
      <echo message="execute cpp with: ./bin/clickMe"/>
      <echo message="invoke java with: java -cp classes ser321.FolderBrowser pathToADirectory"/>
   </target>

   <path id="compile.classpath">
      <pathelement location="${build}"/>
   </path>

   <target name="clean">
      <delete dir="${classes.dir}" failonerror="false"/>
      <delete dir="${dist.dir}" failonerror="false"/>
      <delete dir="${obj.dir}" failonerror="false"/>
   </target>

   <target name="prepare">
      <mkdir dir="${classes.dir}"/>
      <mkdir dir="${dist.dir}" />
      <mkdir dir="${obj.dir}" />
      <if>
         <isset property="env.USERNAME"/>
         <then>
            <echo message="detected username is: ${env.USERNAME}"/>
         </then>
      <elseif>
         <isset property="env.USER"/>
         <then>
            <echo message="detected user is: ${env.USER}"/>
         </then>
      </elseif>
      </if>
      <echo message="host name is: ${os.name}"/>
      <echo message="host arch is: ${os.arch}"/>
      <echo message="host version is: ${os.version}"/>
      <echo message="base directory is: ${basedir}"/>

      <!-- Platform identification -->
      <condition property="build.host.islinux">
        <and>
          <os family="unix" />
          <not>
            <contains string="${os.name}" substring="mac"
                      casesensitive="false" />
          </not>
        </and>
      </condition>
      <condition property="build.host.platform" value="linux">
        <isset property="build.host.islinux" />
      </condition>

      <condition property="build.host.ismac">
        <and>
          <os family="unix" />
          <contains string="${os.name}" substring="mac" casesensitive="false"/>
        </and>
      </condition>
      <condition property="build.host.platform" value="mac">
        <isset property="build.host.ismac" />
      </condition>

      <fail unless="build.host.platform"
            message="Building on ${os.name} is not supported" />
      <echo message="build.host.platform is: ${build.host.platform}"/>
      <if>
         <isset property="build.host.ismac"/>
         <then>
            <echo message="detected a mac host"/>
            <property name="includepath" value="/opt/local/include:/usr/local/include"/>
            <property name="lib.path" value="/opt/local/lib"/>
            <property name="lib.list" value="c++,fltk,stdc++"/>
         </then>
      <elseif>
         <isset property="build.host.islinux"/>
         <then>
            <echo message="detected a linux host"/>
            <property name="includepath" value="/usr/local/include"/>
            <property name="lib.path" value="/usr/local/lib"/>
            <property name="lib.list" value="fltk,stdc++"/>
         </then>
      </elseif>
      <else>
         <echo message="failed to detect a host I know how to build on"/>
      </else>
   </if>
   </target>

   <target name="build.all"
           depends="clean,prepare,build.cpp,build.java"
           description="Clean then build cpp fltk demo, and java swing tree demo"/>

  <target name="build.java" depends="prepare"
          description="Compile Java client sources">
     <!-- Compile Java classes as necessary -->
     <javac srcdir="${src.dir}/java"
            destdir="${classes.dir}"
            includeantruntime="false">
        <classpath refid="compile.classpath"/>
    </javac>
  </target>

   <target name="build.cpp" depends="prepare">
<<<<<<< HEAD
      <cc outtype="executable" subsystem="console" outfile="${dist.dir}/mediaClient" objdir="${obj.dir}">
       <includepath>
=======
      <cc outtype="executable" subsystem="console"
          outfile="${dist.dir}/mediaClient"
          objdir="${obj.dir}">
         <includepath>
>>>>>>> 8fa2ddab5d46a08d820f8a7388a1d94d23c026be
            <pathelement path="${includepath}"/>
         </includepath>
         <libset dir="${lib.path}" libs="${lib.list}"/>
         <fileset dir="${src.dir}/cpp" includes="MediaClientGui.cpp,MediaClient.cpp"/>
      </cc>
   </target>

</project>
