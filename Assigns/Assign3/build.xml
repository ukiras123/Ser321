<project name="Ser321 Assignment3"
         default="targets" basedir="."
         xmlns="antlib:org.apache.tools.ant">
   <taskdef resource="cpptasks.tasks"/>
   <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>

   <property name="src" value="./src" />
   <property name="build" value="./classes" />
   <property name="lib" value="./lib" />
   <property environment="env"/>

   <path id="compile.classpath">
      <pathelement location="${build}"/>
      <pathelement path="${lib}/json.jar"/>
   </path>

   <target name="targets">
     <echo message="targets are clean, prepare, build.java, execute.java"/>
     <echo message="execute java with: java -cp classes:lib/json.jar movie.Main"/>
   </target>

   <target name="prepare">
      <!-- Create the time stamp -->
      <tstamp/>
      <!-- Create the build directory structure used by compile -->
      <echo message="home defined as: ${env.HOME}" />
      <mkdir dir="${build}" />

      <if>
         <isset property="env.USERNAME"/>
         <then>
            <echo message="detected username is: ${env.USERNAME}"/>
         </then>
      <elseif>
         <isset property="env.USER"/>
         <then>
            <echo message="detected user is: ${env.USER}"/>
         </then>
      </elseif>
      </if>
      <echo message="host name is: ${os.name}"/>
      <echo message="host arch is: ${os.arch}"/>
      <echo message="host version is: ${os.version}"/>
      <echo message="base directory is: ${basedir}"/>

      <!-- Platform identification -->
      <condition property="build.host.islinux">
        <and>
          <os family="unix" />
          <not>
            <contains string="${os.name}" substring="mac"
                      casesensitive="false" />
          </not>
        </and>
      </condition>
      <condition property="build.host.platform" value="linux">
        <isset property="build.host.islinux" />
      </condition>

      <condition property="build.host.ismac">
        <and>
          <os family="unix" />
          <contains string="${os.name}" substring="mac" casesensitive="false"/>
        </and>
      </condition>
      <condition property="build.host.platform" value="mac">
        <isset property="build.host.ismac" />
      </condition>

      <fail unless="build.host.platform"
            message="Building on ${os.name} is not supported" />
      <echo message="build.host.platform is: ${build.host.platform}"/>
      <if>
         <isset property="build.host.ismac"/>
         <then>
            <echo message="detected a mac host"/>
            <property name="includepath" value="/opt/local/include:/usr/local/include"/>
            <property name="client.lib.path" value="/opt/local/lib"/>
         </then>
      <elseif>
         <isset property="build.host.islinux"/>
         <then>
            <echo message="detected a linux host"/>
            <property name="client.lib.path" value="/usr/local/lib"/>
         </then>
      </elseif>
      <else>
         <echo message="failed to detect a host I know how to build on"/>
      </else>
   </if>
   </target>

   <target name="build.java" depends="prepare"
           description="Compile Java sources">
      <javac srcdir="${src}/java"
             includeantruntime="false"
             destdir="${build}">
         <classpath refid="compile.classpath"/>
      </javac>
   </target>

   <target name="execute.java" depends="build.java"
           description="Start program">
         <echo message="user.dir is: ${user.dir}"/>
         <echo message="command line execute: java -cp classes:lib/json.jar movie.Main" />
         <java classname="movie.Main" fork="yes">
           <classpath refid="compile.classpath"/>
         </java>
   </target>

   <target name="clean">
     <delete dir="${build}" />
     <delete file="moviesSave.json"/>
   </target>

</project>
