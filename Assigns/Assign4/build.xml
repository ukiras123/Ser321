<?xml version="1.0"?>
<project name="JsonRPC in CPP using libjson-rpc-cpp" default="targets">
   <taskdef resource="cpptasks.tasks"/>
   <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
   <property name="src.dir" value="src"/>
   <property name="dist.dir" value="bin"/>
   <property name="classes.dir" value="classes"/>
   <property name="host.name" value="127.0.0.1"/>
   <property name="port.num" value="8080"/>
<<<<<<< HEAD
=======
   <!-- <property name="json.file.name" value="StudentLibraryMethods.json"/> -->
>>>>>>> 8fa2ddab5d46a08d820f8a7388a1d94d23c026be
   <property environment="env"/>
   <!--Set the ostype property: <property name="ostype" value="${env.OSTYPE}"/>-->
    <condition property="ostype" value="${env.OSTYPE}">
        <isset property="env.OSTYPE" />
    </condition>
    <condition property="ostype" value="env.OSTYPE_inaccessable">
        <not>
            <isset property="env.OSTYPE" />
        </not>
    </condition>

    <!--Set the dyldpath property <var name="dyldpath" value="${env.DYLD_FALLBACK_LIBRARY_PATH}"/>-->
    <condition property="dyldpath" value="${env.DYLD_FALLBACK_PATH}">
        <isset property="env.DYLD_FALLBACK_PATH" />
    </condition>
    <condition property="dyldpath" value="env.DYLD_FALLBACK_PATH_inaccessible">
        <not>
            <isset property="env.DYLD_FALLBACK_PATH" />
        </not>
    </condition>

   <target name="targets">
      <echo message="Targets are clean, prepare, build.all, build.java.server, generate.java.proxy, targets"/>
      <echo message="base directory is: ${basedir}"/>
      <echo message="ostype is ${ostype} and dyldpath is ${dyldpath}"/>
      <echo message="on MacOSX define DYLD_FALLBACK_LIBRARY_PATH. Its: ${dyldpath} For macport and manual builds use /opt/local/lib:/usr/local/lib"/>
<<<<<<< HEAD
      <echo message="invoke java http server with: java -cp classes:lib/jsonrpcserver.jar server.MedialLibraryHttpServer ${port.num}"/>
=======
<!--      <echo message="invoke java http client with: java -cp classes:lib/jsonrpcclient.jar server.StudentCollectionClient ${host.name} ${port.num}"/> -->
      <echo message="invoke java http server with: java -cp classes:lib/jsonrpcserver.jar server.MovieLibraryHttpServer ${port.num}"/>
      
>>>>>>> 8fa2ddab5d46a08d820f8a7388a1d94d23c026be
   </target>

   <path id="compile.classpath">
      <pathelement location="${classes.dir}"/>
      <fileset dir="${basedir}/lib">
         <include name="json.jar"/>
         <include name="jsonrpcserver.jar"/>
         <include name="jsonrpcclient.jar"/>
         <include name="jsonrpcproxy.jar"/>
      </fileset>
   </path>

   <target name="clean">
      <delete dir="${classes.dir}" failonerror="false"/>
      <delete dir="${dist.dir}" failonerror="false"/>
      <delete dir="${obj.dir}" failonerror="false"/>
      <delete dir="log" failonerror="false"/>
      <delete file="log.txt" failonerror="false"/>
      <delete file="logerrors.txt" failonerror="false"/>
      <delete file="logpid.txt" failonerror="false"/>
      <delete file="${src.dir}/java/client/MovieLibraryHttpProxy.java"
              failonerror="false"/>
   </target>

   <target name="prepare">
      <mkdir dir="${classes.dir}"/>
      <mkdir dir="${dist.dir}" />
      <mkdir dir="log" />
      <if>
         <isset property="env.USERNAME"/>
         <then>
            <echo message="detected username is: ${env.USERNAME}"/>
         </then>
      <elseif>
         <isset property="env.USER"/>
         <then>
            <echo message="detected user is: ${env.USER}"/>
         </then>
      </elseif>
      </if>
      <echo message="host name is: ${os.name}"/>
      <echo message="host arch is: ${os.arch}"/>
      <echo message="host version is: ${os.version}"/>
      <echo message="base directory is: ${basedir}"/>

      <!-- Platform identification -->
      <condition property="build.host.islinux">
        <and>
          <os family="unix" />
          <not>
            <contains string="${os.name}" substring="mac"
                      casesensitive="false" />
          </not>
        </and>
      </condition>
      <condition property="build.host.platform" value="linux">
        <isset property="build.host.islinux" />
      </condition>

      <condition property="build.host.ismac">
        <and>
          <os family="unix" />
          <contains string="${os.name}" substring="mac" casesensitive="false"/>
        </and>
      </condition>
      <condition property="build.host.platform" value="mac">
        <isset property="build.host.ismac" />
      </condition>

      <fail unless="build.host.platform"
            message="Building on ${os.name} is not supported" />
      <echo message="build.host.platform is: ${build.host.platform}"/>
      <if>
         <isset property="build.host.ismac"/>
         <then>
            <echo message="detected a mac host"/>
            <property name="cxxflag" value="-std=c++14"/>
            <property name="includepath" value="/opt/local/include:/usr/local/include"/>
            <property name="client.lib.path" value="/opt/local/lib"/>
            <property name="client.lib.list" value="c++,jsoncpp,jsonrpccpp-client,jsonrpccpp-common,microhttpd,stdc++"/>
            <property name="server.lib.path" value="/opt/local/lib"/>
            <property name="server.lib.list" value="c++,jsoncpp,jsonrpccpp-server,jsonrpccpp-common,microhttpd"/>
         </then>
      <elseif>
         <isset property="build.host.islinux"/>
         <then>
            <echo message="detected a linux host"/>
            <property name="cxxflag" value="-std=c++14"/>
            <property name="includepath" value="/usr/local/include:/usr/include/jsoncpp"/>
            <property name="client.lib.path" value="/usr/local/lib"/>
            <property name="client.lib.list" value="jsoncpp,jsonrpccpp-client,jsonrpccpp-common,microhttpd,stdc++"/>
            <property name="server.lib.path" value="/usr/local/lib"/>
            <property name="server.lib.list" value="jsoncpp,jsonrpccpp-server,jsonrpccpp-common,microhttpd,stdc++"/>
         </then>
      </elseif>
      <else>
         <echo message="failed to detect a host I know how to build on"/>
      </else>
   </if>
   </target>

   <target name="build.all"
           depends="clean,prepare,build.java.server,generate.java.proxy"
           description="Clean then build java server and client"/>

   <target name="build.java.server" depends="prepare"
          description="Compile Java server sources">
     <!-- Compile Java server classes as necessary -->
     <echo message="http server: java -cp classes:lib/jsonrpcserver.jar server.MovieLibraryHttpServer aPortNumber"/>
     <javac srcdir="${src.dir}/java/server"
            destdir="${classes.dir}"
            includeantruntime="false">
        <classpath refid="compile.classpath"/>
    </javac>
<<<<<<< HEAD
=======
<!--    <jar destfile="${lib.dir}/jsonrpcserver.jar">
            <fileset dir="${classes.dir}" includes="edu/asu/ser/jsonrpc/server/*.class"/>
            <fileset dir="${classes.dir}" includes="edu/asu/ser/jsonrpc/common/*.class"/>
            <zipgroupfileset dir="${lib.dir}">
                 <include name="json.jar"/>
            </zipgroupfileset>
    </jar>
    <jar destfile="${lib.dir}/jsonrpcclient.jar">
            <fileset dir="${classes.dir}" includes="edu/asu/ser/jsonrpc/client/*.class"/>
            <fileset dir="${classes.dir}" includes="edu/asu/ser/jsonrpc/proxy/*.class"/>
            <fileset dir="${classes.dir}" includes="edu/asu/ser/jsonrpc/common/*.class"/>
            <zipgroupfileset dir="${lib.dir}">
                 <include name="json.jar"/>
            </zipgroupfileset>
    </jar> -->
>>>>>>> 8fa2ddab5d46a08d820f8a7388a1d94d23c026be
   </target>

   <target name="generate.java.proxy"
           description="execute the jsonRPC proxy generator to generate client proxy.">
      <echo message="http proxy: java -cp classes:lib/jsonrpcproxy.jar edu.asu.ser.jsonrpc.proxy.ProxyGenerator -l java -t http -o MovieLibraryHttpProxy server.MovieLibrary server.MovieDescription"/>
      <java classname="edu.asu.ser.jsonrpc.proxy.ProxyGenerator"
            fork="yes">
         <classpath refid="compile.classpath"/>
         <arg value="-l"/>
         <arg value="java"/>
         <arg value="-t"/>
         <arg value="http"/>
         <arg value="-o"/>
         <arg value="MovieLibraryHttpProxy"/>
         <arg value="server.MovieLibrary"/>
         <arg value="server.MovieDescription"/>
      </java>
<<<<<<< HEAD
   </target>
=======
		<move file="${basedir}/MovieLibraryHttpProxy.java"
            tofile="${src.dir}/java/client/MovieLibraryHttpProxy.java"/>
   </target>

   
<!--   <target name="build.java.client" depends="generate.java.proxy"
          description="Compile Java client sources">

     <echo message="execute client: java -cp classes:lib/jsonrpcclient.jar client.MovieLibraryClient localhost 8080"/>
     <javac srcdir="${src.dir}/java/client"
            destdir="${classes.dir}"
            includeantruntime="false">
        <classpath refid="compile.classpath"/>
     </javac>
   </target>
   -->

>>>>>>> 8fa2ddab5d46a08d820f8a7388a1d94d23c026be
</project>
